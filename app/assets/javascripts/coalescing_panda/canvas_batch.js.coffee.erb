class CanvasBatchProgress
  constructor: ->
    batch = $('#batch-progress').data('batch')
    url = $('#batch-progress').data('url')
    window.clearPath = $('#batch-progress').data('clear-path')
    if batch && batch.status != "Completed" || batch.status != "Error"
      window.batchInterval = setInterval(getBatchStatus, 3000, batch.id, url)

  getBatchStatus = (id, url) ->
    $.ajax
      url: url
      success: (data) ->
        $('#batch-progress').html(data)
        batch = $('#batch-info').data('batch')
        if batch.status == "Completed" || batch.status == "Error"
          clearInterval(window.batchInterval)
          $('#batch-progress').html(data)
          clearBatchFromSession(batch.id)

      error: (message) ->
        $('#batch-progress').html('Batch status request failed')
        clearInterval(window.batchInterval)

  clearBatchFromSession = (id) ->
    $.ajax
      url: window.clearPath
      type: 'POST'
      success: (data) ->
        delay 3000, ->
          $('#batch-progress').fadeOut(1000)
          $('#batch-progress').html("")
          $('#batch-progress').show()

  delay = (ms, func) -> setTimeout func, ms

$ ->
  new CanvasBatchProgress() if $('#batch-progress').length > 0

  $("#batch-container").unbind().bind "batchStarted", (event, data) ->
    new CanvasBatchProgress()